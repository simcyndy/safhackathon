# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2019-06-13 09:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BalanceType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntryType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExecutionProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RuleProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('order', models.IntegerField()),
                ('sleep_seconds', models.IntegerField(default=0)),
                ('execution_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ExecutionProfile')),
            ],
            options={
                'ordering': ('execution_profile__name', 'order'),
            },
        ),
        migrations.CreateModel(
            name='RuleProfileCommand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('order', models.IntegerField()),
                ('rule_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.RuleProfile')),
            ],
            options={
                'ordering': ('rule_profile__execution_profile__name', 'rule_profile__order', 'order'),
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ('state_category__name', 'name'),
            },
        ),
        migrations.CreateModel(
            name='StateCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'State categories',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State')),
            ],
            options={
                'verbose_name_plural': 'Taxes',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('selector', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionAccountTypeRuleProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AccountType')),
                ('rule_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.RuleProfile')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('simple_name', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='transactionaccounttyperuleprofile',
            name='transaction_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.TransactionType'),
        ),
        migrations.AlterUniqueTogether(
            name='statecategory',
            unique_together=set([('name',)]),
        ),
        migrations.AddField(
            model_name='state',
            name='state_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.StateCategory'),
        ),
        migrations.AddField(
            model_name='ruleprofilecommand',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='ruleprofile',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='region',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='notificationtype',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='identitytype',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='executionprofile',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='entrytype',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='commission',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='balancetype',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AddField(
            model_name='accounttype',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.State'),
        ),
        migrations.AlterUniqueTogether(
            name='transfertype',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='transactiontype',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='transactionaccounttyperuleprofile',
            unique_together=set([('account_type', 'transaction_type', 'rule_profile')]),
        ),
        migrations.AlterUniqueTogether(
            name='theme',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='tax',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='state',
            unique_together=set([('state_category', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='ruleprofilecommand',
            unique_together=set([('name', 'rule_profile')]),
        ),
        migrations.AlterUniqueTogether(
            name='ruleprofile',
            unique_together=set([('name', 'execution_profile')]),
        ),
        migrations.AlterUniqueTogether(
            name='region',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='notificationtype',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='executionprofile',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='entrytype',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='commission',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='balancetype',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='accounttype',
            unique_together=set([('name',)]),
        ),
    ]
